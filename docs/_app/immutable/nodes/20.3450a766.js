import{S as Po,i as So,s as To,k as o,q as l,a as k,l as e,m as c,r as u,h as s,c as i,n as r,b as p,G as t,M as Np}from"../chunks/index.039744db.js";function No(Yt){let d,m,Pn,fa,ba,ls,h,ya,L,ga,_a,us,v,f,Sn,wa,Ca,rs,x,Tn,ha,va,Nn,xa,ks,E,b,Rn,Ea,Ma,is,sn,Hn,An,Pa,ds,F,Sa,Ln,Ta,ms,O,qt=`<code class="language-typescript"><span class="token comment">//Card.tsx</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> useTexture <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"@react-three/drei"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Mesh <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"three"</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">Card</span><span class="token punctuation">(</span>
  props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    faceTextureUrl<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    idx<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    beginX<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    serial<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">let</span> _selectedOffsetY <span class="token operator">=</span> <span class="token number">.2</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> _beginX <span class="token operator">=</span> props<span class="token punctuation">.</span>beginX<span class="token punctuation">;</span>
  <span class="token keyword">const</span> _texture <span class="token operator">=</span> <span class="token function">useTexture</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    map<span class="token operator">:</span> props<span class="token punctuation">.</span>faceTextureUrl<span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>mesh
      position<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span>_beginX <span class="token operator">+</span> props<span class="token punctuation">.</span>idx <span class="token operator">*</span> <span class="token number">.5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> props<span class="token punctuation">.</span>idx <span class="token operator">*</span> <span class="token number">0.001</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>
      onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span>e<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
        e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> _targetMesh <span class="token operator">=</span> e<span class="token punctuation">[</span><span class="token string">"eventObject"</span><span class="token punctuation">]</span> <span class="token keyword">as</span> Mesh<span class="token punctuation">;</span>
        <span class="token keyword">let</span> _pos <span class="token operator">=</span> _targetMesh<span class="token punctuation">.</span>position<span class="token punctuation">;</span>
        <span class="token keyword">let</span> _upY<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>_pos<span class="token punctuation">.</span>y <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> _upY <span class="token operator">=</span> _selectedOffsetY<span class="token punctuation">;</span>
        <span class="token keyword">else</span> _upY <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        _targetMesh<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>_pos<span class="token punctuation">.</span>x<span class="token punctuation">,</span> _upY<span class="token punctuation">,</span> _pos<span class="token punctuation">.</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>
      userData<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token string-property property">"_d_cardSerial"</span><span class="token operator">:</span> props<span class="token punctuation">.</span>serial <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>
    <span class="token operator">></span>
      <span class="token operator">&lt;</span>boxGeometry args<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">.001</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>meshStandardMaterial <span class="token punctuation">&#123;</span><span class="token operator">...</span>_texture<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>mesh<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Card<span class="token punctuation">;</span></code>`,fs,an,Fn,On,Na,bs,pn,Ra,ys,U,Zt=`<code class="language-typescript"><span class="token operator">&lt;</span>Canvas
  orthographic
  camera<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> zoom<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> position<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span> rotation<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>
<span class="token operator">></span>
  <span class="token operator">&lt;</span>R3fScene
    mainHandCards<span class="token operator">=</span><span class="token punctuation">&#123;</span>mainHandCards<span class="token punctuation">&#125;</span>
    outCards<span class="token operator">=</span><span class="token punctuation">&#123;</span>outCards<span class="token punctuation">&#125;</span>
    gameModel<span class="token operator">=</span><span class="token punctuation">&#123;</span>_gameModel<span class="token punctuation">&#125;</span>
  <span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>R3fScene<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Canvas<span class="token operator">></span><span class="token punctuation">;</span></code>`,gs,tn,Ha,_s,on,Aa,ws,j,Wt=`<code class="language-typescript"><span class="token keyword">const</span> <span class="token function-variable function">R3fScene</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
  props<span class="token operator">:</span> <span class="token punctuation">&#123;</span> mainHandCards<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> gameModel<span class="token punctuation">;</span> outCards<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>
    scene<span class="token punctuation">,</span>
    camera<span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">useThree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>scene<span class="token punctuation">.</span><span class="token function">getObjectByName</span><span class="token punctuation">(</span><span class="token string">"handList"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> mainHandCards <span class="token operator">=</span> props<span class="token punctuation">.</span>mainHandCards<span class="token punctuation">;</span>
  <span class="token keyword">let</span> _gameModel <span class="token operator">=</span> props<span class="token punctuation">.</span>gameModel<span class="token punctuation">;</span>
  _gameModel<span class="token punctuation">.</span>context <span class="token operator">=</span> scene<span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">getFaceTextureUrl</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">let</span> _prefix <span class="token operator">=</span> <span class="token string">"/faces/"</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> _readableName <span class="token operator">=</span> _gameModel<span class="token punctuation">.</span><span class="token function">getCardReadableName</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>_readableName <span class="token operator">===</span> <span class="token string">"rJkr"</span><span class="token punctuation">)</span> <span class="token keyword">return</span> _prefix <span class="token operator">+</span> <span class="token string">"Poker_Joker_B.png"</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>_readableName <span class="token operator">===</span> <span class="token string">"bJkr"</span><span class="token punctuation">)</span> <span class="token keyword">return</span> _prefix <span class="token operator">+</span> <span class="token string">"Poker_Joker_R.png"</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">let</span> _suitDic <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token string">"D"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token string">"H"</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">:</span> <span class="token string">"S"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> _suitNumber<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> serial <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> _prefix <span class="token operator">+</span> <span class="token string">"Poker_"</span> <span class="token operator">+</span> _suitDic<span class="token punctuation">[</span>_suitNumber<span class="token punctuation">]</span> <span class="token operator">+</span> _readableName <span class="token operator">+</span>
        <span class="token string">".png"</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token keyword">let</span> _cardCount <span class="token operator">=</span> mainHandCards<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">let</span> _beginX <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_cardCount <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">.5</span> <span class="token operator">+</span> <span class="token number">1.5</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>CameraControls <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>ambientLight intensity<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0.1</span><span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>directionalLight color<span class="token operator">=</span><span class="token string">"white"</span> position<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>

      <span class="token operator">&lt;</span>group name<span class="token operator">=</span><span class="token string">"handList"</span><span class="token operator">></span>
        <span class="token punctuation">&#123;</span>mainHandCards<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>serial<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> idx<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>Card
              key<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"k"</span> <span class="token operator">+</span> serial<span class="token punctuation">&#125;</span>
              faceTextureUrl<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token function">getFaceTextureUrl</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
              idx<span class="token operator">=</span><span class="token punctuation">&#123;</span>idx<span class="token punctuation">&#125;</span>
              beginX<span class="token operator">=</span><span class="token punctuation">&#123;</span>_beginX<span class="token punctuation">&#125;</span>
              serial<span class="token operator">=</span><span class="token punctuation">&#123;</span>serial<span class="token punctuation">&#125;</span>
            <span class="token operator">/</span><span class="token operator">></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>group<span class="token operator">></span>
      <span class="token operator">&lt;</span>group position<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span> scale<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">.6</span><span class="token punctuation">&#125;</span> name<span class="token operator">=</span><span class="token string">"out-list-1"</span><span class="token operator">></span>
        <span class="token punctuation">&#123;</span>props<span class="token punctuation">.</span>outCards<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>serial<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> idx<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>Card
              key<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"k"</span> <span class="token operator">+</span> serial<span class="token punctuation">&#125;</span>
              faceTextureUrl<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token function">getFaceTextureUrl</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
              idx<span class="token operator">=</span><span class="token punctuation">&#123;</span>idx<span class="token punctuation">&#125;</span>
              beginX<span class="token operator">=</span><span class="token punctuation">&#123;</span>_beginX<span class="token punctuation">&#125;</span>
              serial<span class="token operator">=</span><span class="token punctuation">&#123;</span>serial<span class="token punctuation">&#125;</span>
            <span class="token operator">/</span><span class="token operator">></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>group<span class="token operator">></span>
      <span class="token operator">&lt;</span>group position<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span> scale<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">.6</span><span class="token punctuation">&#125;</span> name<span class="token operator">=</span><span class="token string">"out-list-2"</span><span class="token operator">></span>
        <span class="token punctuation">&#123;</span>props<span class="token punctuation">.</span>outCards<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>serial<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> idx<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>Card
              key<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"k"</span> <span class="token operator">+</span> serial<span class="token punctuation">&#125;</span>
              faceTextureUrl<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token function">getFaceTextureUrl</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
              idx<span class="token operator">=</span><span class="token punctuation">&#123;</span>idx<span class="token punctuation">&#125;</span>
              beginX<span class="token operator">=</span><span class="token punctuation">&#123;</span>_beginX<span class="token punctuation">&#125;</span>
              serial<span class="token operator">=</span><span class="token punctuation">&#123;</span>serial<span class="token punctuation">&#125;</span>
            <span class="token operator">/</span><span class="token operator">></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>group<span class="token operator">></span>
      <span class="token operator">&lt;</span>group position<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span> scale<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">.6</span><span class="token punctuation">&#125;</span> name<span class="token operator">=</span><span class="token string">"out-list-0"</span><span class="token operator">></span>
        <span class="token punctuation">&#123;</span>props<span class="token punctuation">.</span>outCards<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>serial<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> idx<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>Card
              key<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"k"</span> <span class="token operator">+</span> serial<span class="token punctuation">&#125;</span>
              faceTextureUrl<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token function">getFaceTextureUrl</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
              idx<span class="token operator">=</span><span class="token punctuation">&#123;</span>idx<span class="token punctuation">&#125;</span>
              beginX<span class="token operator">=</span><span class="token punctuation">&#123;</span>_beginX<span class="token punctuation">&#125;</span>
              serial<span class="token operator">=</span><span class="token punctuation">&#123;</span>serial<span class="token punctuation">&#125;</span>
            <span class="token operator">/</span><span class="token operator">></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>group<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`,Cs,en,La,hs,X,Kt=`<code class="language-typescript"><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> OrbitControls <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">CameraControls</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>
    camera<span class="token punctuation">,</span>
    gl<span class="token operator">:</span> <span class="token punctuation">&#123;</span> domElement <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">useThree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> controls <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">useFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token punctuation">(</span>controls<span class="token punctuation">.</span>current <span class="token keyword">as</span> <span class="token builtin">unknown</span> <span class="token keyword">as</span> OrbitControls<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token comment">// @ts-ignore</span>
    <span class="token operator">&lt;</span>orbitControls
      ref<span class="token operator">=</span><span class="token punctuation">&#123;</span>controls<span class="token punctuation">&#125;</span>
      args<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span>camera<span class="token punctuation">,</span> domElement<span class="token punctuation">]</span><span class="token punctuation">&#125;</span>
      enableZoom<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token boolean">false</span><span class="token punctuation">&#125;</span>
      maxAzimuthAngle<span class="token operator">=</span><span class="token punctuation">&#123;</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">&#125;</span>
      maxPolarAngle<span class="token operator">=</span><span class="token punctuation">&#123;</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">&#125;</span>
      minAzimuthAngle<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token operator">-</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">&#125;</span>
      minPolarAngle<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">&#125;</span>
      rotationSpeed<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0.01</span><span class="token punctuation">&#125;</span>
    <span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`,vs,cn,Fa,xs,G,Qt=`<code class="language-typescript"><span class="token comment">//App.tsx</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> useEffect<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Canvas<span class="token punctuation">,</span> extend<span class="token punctuation">,</span> useFrame<span class="token punctuation">,</span> useThree <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"@react-three/fiber"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> OrbitControls <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"three/examples/jsm/controls/OrbitControls"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">"./App.css"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Card <span class="token keyword">from</span> <span class="token string">"./component/Card"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> GameModel <span class="token keyword">from</span> <span class="token string">"./base/src/game/model/GameModel"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> GameSceneMediator <span class="token keyword">from</span> <span class="token string">"./base/src/game/view/GameSceneMediator"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> GameSceneView <span class="token keyword">from</span> <span class="token string">"./component/GameSceneView"</span><span class="token punctuation">;</span>

<span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> OrbitControls <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">CameraControls</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>
    camera<span class="token punctuation">,</span>
    gl<span class="token operator">:</span> <span class="token punctuation">&#123;</span> domElement <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">useThree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> controls <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">useFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token punctuation">(</span>controls<span class="token punctuation">.</span>current <span class="token keyword">as</span> <span class="token builtin">unknown</span> <span class="token keyword">as</span> OrbitControls<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token comment">// @ts-ignore</span>
    <span class="token operator">&lt;</span>orbitControls
      ref<span class="token operator">=</span><span class="token punctuation">&#123;</span>controls<span class="token punctuation">&#125;</span>
      args<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span>camera<span class="token punctuation">,</span> domElement<span class="token punctuation">]</span><span class="token punctuation">&#125;</span>
      enableZoom<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token boolean">false</span><span class="token punctuation">&#125;</span>
      maxAzimuthAngle<span class="token operator">=</span><span class="token punctuation">&#123;</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">&#125;</span>
      maxPolarAngle<span class="token operator">=</span><span class="token punctuation">&#123;</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">&#125;</span>
      minAzimuthAngle<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token operator">-</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">&#125;</span>
      minPolarAngle<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">&#125;</span>
      rotationSpeed<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0.01</span><span class="token punctuation">&#125;</span>
    <span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">R3fScene</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
  props<span class="token operator">:</span> <span class="token punctuation">&#123;</span> mainHandCards<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> gameModel<span class="token punctuation">;</span> outCards<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>
    scene<span class="token punctuation">,</span>
    camera<span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">useThree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> mainHandCards <span class="token operator">=</span> props<span class="token punctuation">.</span>mainHandCards<span class="token punctuation">;</span>
  <span class="token keyword">let</span> _gameModel <span class="token operator">=</span> props<span class="token punctuation">.</span>gameModel<span class="token punctuation">;</span>
  _gameModel<span class="token punctuation">.</span>context <span class="token operator">=</span> scene<span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">getFaceTextureUrl</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">let</span> _prefix <span class="token operator">=</span> <span class="token string">"/faces/"</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> _readableName <span class="token operator">=</span> _gameModel<span class="token punctuation">.</span><span class="token function">getCardReadableName</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>_readableName <span class="token operator">===</span> <span class="token string">"rJkr"</span><span class="token punctuation">)</span> <span class="token keyword">return</span> _prefix <span class="token operator">+</span> <span class="token string">"Poker_Joker_B.png"</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>_readableName <span class="token operator">===</span> <span class="token string">"bJkr"</span><span class="token punctuation">)</span> <span class="token keyword">return</span> _prefix <span class="token operator">+</span> <span class="token string">"Poker_Joker_R.png"</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">let</span> _suitDic <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token string">"D"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token string">"H"</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">:</span> <span class="token string">"S"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> _suitNumber<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> serial <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> _prefix <span class="token operator">+</span> <span class="token string">"Poker_"</span> <span class="token operator">+</span> _suitDic<span class="token punctuation">[</span>_suitNumber<span class="token punctuation">]</span> <span class="token operator">+</span> _readableName <span class="token operator">+</span>
        <span class="token string">".png"</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token keyword">let</span> _cardCount <span class="token operator">=</span> mainHandCards<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">let</span> _beginX <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_cardCount <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">.5</span> <span class="token operator">+</span> <span class="token number">1.5</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>CameraControls <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>ambientLight intensity<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0.1</span><span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>directionalLight color<span class="token operator">=</span><span class="token string">"white"</span> position<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>

      <span class="token operator">&lt;</span>group name<span class="token operator">=</span><span class="token string">"handList"</span><span class="token operator">></span>
        <span class="token punctuation">&#123;</span>mainHandCards<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>serial<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> idx<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>Card
              key<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"k"</span> <span class="token operator">+</span> serial<span class="token punctuation">&#125;</span>
              faceTextureUrl<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token function">getFaceTextureUrl</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
              idx<span class="token operator">=</span><span class="token punctuation">&#123;</span>idx<span class="token punctuation">&#125;</span>
              beginX<span class="token operator">=</span><span class="token punctuation">&#123;</span>_beginX<span class="token punctuation">&#125;</span>
              serial<span class="token operator">=</span><span class="token punctuation">&#123;</span>serial<span class="token punctuation">&#125;</span>
            <span class="token operator">/</span><span class="token operator">></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>group<span class="token operator">></span>
      <span class="token operator">&lt;</span>group position<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span> scale<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">.6</span><span class="token punctuation">&#125;</span> name<span class="token operator">=</span><span class="token string">"out-list-1"</span><span class="token operator">></span>
        <span class="token punctuation">&#123;</span>props<span class="token punctuation">.</span>outCards<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>serial<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> idx<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>Card
              key<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"k"</span> <span class="token operator">+</span> serial<span class="token punctuation">&#125;</span>
              faceTextureUrl<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token function">getFaceTextureUrl</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
              idx<span class="token operator">=</span><span class="token punctuation">&#123;</span>idx<span class="token punctuation">&#125;</span>
              beginX<span class="token operator">=</span><span class="token punctuation">&#123;</span>_beginX<span class="token punctuation">&#125;</span>
              serial<span class="token operator">=</span><span class="token punctuation">&#123;</span>serial<span class="token punctuation">&#125;</span>
            <span class="token operator">/</span><span class="token operator">></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>group<span class="token operator">></span>
      <span class="token operator">&lt;</span>group position<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span> scale<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">.6</span><span class="token punctuation">&#125;</span> name<span class="token operator">=</span><span class="token string">"out-list-2"</span><span class="token operator">></span>
        <span class="token punctuation">&#123;</span>props<span class="token punctuation">.</span>outCards<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>serial<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> idx<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>Card
              key<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"k"</span> <span class="token operator">+</span> serial<span class="token punctuation">&#125;</span>
              faceTextureUrl<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token function">getFaceTextureUrl</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
              idx<span class="token operator">=</span><span class="token punctuation">&#123;</span>idx<span class="token punctuation">&#125;</span>
              beginX<span class="token operator">=</span><span class="token punctuation">&#123;</span>_beginX<span class="token punctuation">&#125;</span>
              serial<span class="token operator">=</span><span class="token punctuation">&#123;</span>serial<span class="token punctuation">&#125;</span>
            <span class="token operator">/</span><span class="token operator">></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>group<span class="token operator">></span>
      <span class="token operator">&lt;</span>group position<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span> scale<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">.6</span><span class="token punctuation">&#125;</span> name<span class="token operator">=</span><span class="token string">"out-list-0"</span><span class="token operator">></span>
        <span class="token punctuation">&#123;</span>props<span class="token punctuation">.</span>outCards<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>serial<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> idx<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>Card
              key<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"k"</span> <span class="token operator">+</span> serial<span class="token punctuation">&#125;</span>
              faceTextureUrl<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token function">getFaceTextureUrl</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
              idx<span class="token operator">=</span><span class="token punctuation">&#123;</span>idx<span class="token punctuation">&#125;</span>
              beginX<span class="token operator">=</span><span class="token punctuation">&#123;</span>_beginX<span class="token punctuation">&#125;</span>
              serial<span class="token operator">=</span><span class="token punctuation">&#123;</span>serial<span class="token punctuation">&#125;</span>
            <span class="token operator">/</span><span class="token operator">></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>group<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span>props<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">let</span> _gameFacade <span class="token operator">=</span> props<span class="token punctuation">.</span>gameFacade<span class="token punctuation">;</span>
  <span class="token keyword">let</span> _gameModel<span class="token operator">:</span> GameModel <span class="token operator">=</span> _gameFacade<span class="token punctuation">.</span><span class="token function">retrieveProxy</span><span class="token punctuation">(</span><span class="token string">"GameModel"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token punctuation">[</span>mainHandCards<span class="token punctuation">,</span> setMainHandCards<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>_gameModel<span class="token punctuation">.</span>cardsArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token punctuation">[</span>outCards<span class="token punctuation">,</span> setOutCards<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>_gameModel<span class="token punctuation">.</span>outCards<span class="token punctuation">)</span><span class="token punctuation">;</span>
  _gameModel<span class="token punctuation">.</span><span class="token function">setMainHandCardsHook</span><span class="token punctuation">(</span>setMainHandCards<span class="token punctuation">)</span><span class="token punctuation">;</span>
  _gameModel<span class="token punctuation">.</span><span class="token function">setOutCardsHook</span><span class="token punctuation">(</span>setOutCards<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>_gameFacade<span class="token punctuation">.</span><span class="token function">retrieveMediator</span><span class="token punctuation">(</span><span class="token string">"GameSceneMediator"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      _gameFacade<span class="token punctuation">.</span><span class="token function">registerMediator</span><span class="token punctuation">(</span>
        <span class="token keyword">new</span> <span class="token class-name">GameSceneMediator</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GameSceneView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"canvas-container"</span><span class="token operator">></span>
        <span class="token operator">&lt;</span>Canvas
          orthographic
          camera<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> zoom<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> position<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span> rotation<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>
        <span class="token operator">></span>
          <span class="token operator">&lt;</span>R3fScene
            mainHandCards<span class="token operator">=</span><span class="token punctuation">&#123;</span>mainHandCards<span class="token punctuation">&#125;</span>
            outCards<span class="token operator">=</span><span class="token punctuation">&#123;</span>outCards<span class="token punctuation">&#125;</span>
            gameModel<span class="token operator">=</span><span class="token punctuation">&#123;</span>_gameModel<span class="token punctuation">&#125;</span>
          <span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>R3fScene<span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Canvas<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>

      <span class="token operator">&lt;</span>div
        id<span class="token operator">=</span><span class="token string">"status"</span>
        style<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>
          display<span class="token operator">:</span> <span class="token string">"fix"</span><span class="token punctuation">,</span>
          textAlign<span class="token operator">:</span> <span class="token string">"center"</span><span class="token punctuation">,</span>
          fontSize<span class="token operator">:</span> <span class="token string">"2em"</span><span class="token punctuation">,</span>
          userSelect<span class="token operator">:</span> <span class="token string">"none"</span><span class="token punctuation">,</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>
      <span class="token operator">></span>
        hello
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
      <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"controlPanel-scores"</span> className<span class="token operator">=</span><span class="token string">"controlPanel"</span><span class="token operator">></span>
        <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"controlPanel-scores-1"</span> className<span class="token operator">=</span><span class="token string">"controlButton"</span><span class="token operator">></span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>
        <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"controlPanel-scores-2"</span> className<span class="token operator">=</span><span class="token string">"controlButton"</span><span class="token operator">></span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>
        <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"controlPanel-scores-3"</span> className<span class="token operator">=</span><span class="token string">"controlButton"</span><span class="token operator">></span><span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>

      <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"controlPanel-operation"</span> className<span class="token operator">=</span><span class="token string">"controlPanel"</span><span class="token operator">></span>
        <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"controlPanel-operation-pass"</span> className<span class="token operator">=</span><span class="token string">"controlButton"</span><span class="token operator">></span>
          pass
        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>
        <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"controlPanel-operation-play"</span> className<span class="token operator">=</span><span class="token string">"controlButton"</span><span class="token operator">></span>
          play
        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span></code>`,Es,M,y,Un,Oa,Ua,Ms,ln,jn,Xn,ja,Ps,D,$t=`<code class="language-typescript"><span class="token function">getViewComponent</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>isDOM<span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>canvasScene<span class="token operator">:</span><span class="token builtin">any</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>isDOM<span class="token punctuation">)</span> <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>canvasScene<span class="token punctuation">)</span> <span class="token keyword">return</span> canvasScene<span class="token punctuation">.</span><span class="token function">getObjectByName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span></code>`,Ss,un,Xa,Ts,rn,Gn,g,Ga,Dn,Da,Ia,In,Ba,za,Ns,I,no=`<code class="language-typescript"><span class="token keyword">private</span> <span class="token function">onOutCards_C2S</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hideControlPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> _outCardsSerial <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> _cardsContainer <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mViewClass<span class="token punctuation">.</span><span class="token function">getViewComponent</span><span class="token punctuation">(</span><span class="token string">"handList"</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getGameModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> _cards <span class="token operator">=</span> _cardsContainer<span class="token punctuation">.</span>children<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> _cards<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">let</span> _card <span class="token operator">=</span> _cards<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>mViewClass<span class="token punctuation">.</span><span class="token function">isCardSelected</span><span class="token punctuation">(</span>_card<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                _outCardsSerial<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>_card<span class="token punctuation">.</span>userData<span class="token punctuation">[</span><span class="token string">"_d_cardSerial"</span><span class="token punctuation">]</span><span class="token operator">||</span>_card<span class="token punctuation">[</span><span class="token string">"_d_cardSerial"</span><span class="token punctuation">]</span> <span class="token operator">||</span> _card<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"data-card-serial"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getNetFacade</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?.</span><span class="token function">sendNotification</span><span class="token punctuation">(</span>card_game_pb<span class="token punctuation">.</span>Cmd<span class="token punctuation">.</span><span class="token constant">PLAYCARDS_C2S</span><span class="token punctuation">,</span> _outCardsSerial<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span></code>`,Rs,kn,Bn,zn,Ja,Hs,dn,Va,As,B,so=`<code class="language-typescript"><span class="token function">isCardSelected</span><span class="token punctuation">(</span>card<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> card<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">==</span> <span class="token number">.2</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span></code>`,Ls,mn,z,Ya,Fs,Os,Us,P,qa,J,Za,Wa,js,S,_,Jn,Ka,Qa,Xs,T,Vn,$a,np,Yn,sp,Gs,N,w,qn,ap,pp,Ds,fn,Zn,Wn,tp,Is,R,op,Kn,ep,cp,Bs,V,ao=`<code class="language-typescript"><span class="token comment">//Card.tsx</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> useTexture <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"@react-three/drei"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Mesh <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"three"</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">Card</span><span class="token punctuation">(</span>
  props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    faceTextureUrl<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    idx<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    beginX<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    serial<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">let</span> _selectedOffsetY <span class="token operator">=</span> <span class="token number">.2</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> _beginX <span class="token operator">=</span> props<span class="token punctuation">.</span>beginX<span class="token punctuation">;</span>
  <span class="token keyword">const</span> _texture <span class="token operator">=</span> <span class="token function">useTexture</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    map<span class="token operator">:</span> props<span class="token punctuation">.</span>faceTextureUrl<span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>mesh
      position<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span>_beginX <span class="token operator">+</span> props<span class="token punctuation">.</span>idx <span class="token operator">*</span> <span class="token number">.5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> props<span class="token punctuation">.</span>idx <span class="token operator">*</span> <span class="token number">0.001</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>
      onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span>e<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
        e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> _targetMesh <span class="token operator">=</span> e<span class="token punctuation">[</span><span class="token string">"eventObject"</span><span class="token punctuation">]</span> <span class="token keyword">as</span> Mesh<span class="token punctuation">;</span>
        <span class="token keyword">let</span> _pos <span class="token operator">=</span> _targetMesh<span class="token punctuation">.</span>position<span class="token punctuation">;</span>
        <span class="token keyword">let</span> _upY<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>_pos<span class="token punctuation">.</span>y <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> _upY <span class="token operator">=</span> _selectedOffsetY<span class="token punctuation">;</span>
        <span class="token keyword">else</span> _upY <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        _targetMesh<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>_pos<span class="token punctuation">.</span>x<span class="token punctuation">,</span> _upY<span class="token punctuation">,</span> _pos<span class="token punctuation">.</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>
      userData<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token string-property property">"_d_cardSerial"</span><span class="token operator">:</span> props<span class="token punctuation">.</span>serial <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>
    <span class="token operator">></span>
      <span class="token operator">&lt;</span>boxGeometry args<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">.001</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>meshStandardMaterial <span class="token punctuation">&#123;</span><span class="token operator">...</span>_texture<span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>mesh<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Card<span class="token punctuation">;</span></code>`,zs,bn,Qn,$n,lp,Js,yn,up,Vs,Y,po=`<code class="language-typescript"><span class="token operator">&lt;</span>Canvas
  orthographic
  camera<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> zoom<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> position<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span> rotation<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>
<span class="token operator">></span>
  <span class="token operator">&lt;</span>R3fScene
    mainHandCards<span class="token operator">=</span><span class="token punctuation">&#123;</span>mainHandCards<span class="token punctuation">&#125;</span>
    outCards<span class="token operator">=</span><span class="token punctuation">&#123;</span>outCards<span class="token punctuation">&#125;</span>
    gameModel<span class="token operator">=</span><span class="token punctuation">&#123;</span>_gameModel<span class="token punctuation">&#125;</span>
  <span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>R3fScene<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Canvas<span class="token operator">></span><span class="token punctuation">;</span></code>`,Ys,H,rp,ns,kp,ip,qs,q,to=`<code class="language-typescript"><span class="token keyword">const</span> <span class="token function-variable function">R3fScene</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
  props<span class="token operator">:</span> <span class="token punctuation">&#123;</span> mainHandCards<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> gameModel<span class="token punctuation">;</span> outCards<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>
    scene<span class="token punctuation">,</span>
    camera<span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">useThree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>scene<span class="token punctuation">.</span><span class="token function">getObjectByName</span><span class="token punctuation">(</span><span class="token string">"handList"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> mainHandCards <span class="token operator">=</span> props<span class="token punctuation">.</span>mainHandCards<span class="token punctuation">;</span>
  <span class="token keyword">let</span> _gameModel <span class="token operator">=</span> props<span class="token punctuation">.</span>gameModel<span class="token punctuation">;</span>
  _gameModel<span class="token punctuation">.</span>context <span class="token operator">=</span> scene<span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">getFaceTextureUrl</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">let</span> _prefix <span class="token operator">=</span> <span class="token string">"/faces/"</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> _readableName <span class="token operator">=</span> _gameModel<span class="token punctuation">.</span><span class="token function">getCardReadableName</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>_readableName <span class="token operator">===</span> <span class="token string">"rJkr"</span><span class="token punctuation">)</span> <span class="token keyword">return</span> _prefix <span class="token operator">+</span> <span class="token string">"Poker_Joker_B.png"</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>_readableName <span class="token operator">===</span> <span class="token string">"bJkr"</span><span class="token punctuation">)</span> <span class="token keyword">return</span> _prefix <span class="token operator">+</span> <span class="token string">"Poker_Joker_R.png"</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">let</span> _suitDic <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token string">"D"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token string">"H"</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">:</span> <span class="token string">"S"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> _suitNumber<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> serial <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> _prefix <span class="token operator">+</span> <span class="token string">"Poker_"</span> <span class="token operator">+</span> _suitDic<span class="token punctuation">[</span>_suitNumber<span class="token punctuation">]</span> <span class="token operator">+</span> _readableName <span class="token operator">+</span>
        <span class="token string">".png"</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token keyword">let</span> _cardCount <span class="token operator">=</span> mainHandCards<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">let</span> _beginX <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_cardCount <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">.5</span> <span class="token operator">+</span> <span class="token number">1.5</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>CameraControls <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>ambientLight intensity<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0.1</span><span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>directionalLight color<span class="token operator">=</span><span class="token string">"white"</span> position<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>

      <span class="token operator">&lt;</span>group name<span class="token operator">=</span><span class="token string">"handList"</span><span class="token operator">></span>
        <span class="token punctuation">&#123;</span>mainHandCards<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>serial<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> idx<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>Card
              key<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"k"</span> <span class="token operator">+</span> serial<span class="token punctuation">&#125;</span>
              faceTextureUrl<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token function">getFaceTextureUrl</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
              idx<span class="token operator">=</span><span class="token punctuation">&#123;</span>idx<span class="token punctuation">&#125;</span>
              beginX<span class="token operator">=</span><span class="token punctuation">&#123;</span>_beginX<span class="token punctuation">&#125;</span>
              serial<span class="token operator">=</span><span class="token punctuation">&#123;</span>serial<span class="token punctuation">&#125;</span>
            <span class="token operator">/</span><span class="token operator">></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>group<span class="token operator">></span>
      <span class="token operator">&lt;</span>group position<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span> scale<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">.6</span><span class="token punctuation">&#125;</span> name<span class="token operator">=</span><span class="token string">"out-list-1"</span><span class="token operator">></span>
        <span class="token punctuation">&#123;</span>props<span class="token punctuation">.</span>outCards<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>serial<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> idx<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>Card
              key<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"k"</span> <span class="token operator">+</span> serial<span class="token punctuation">&#125;</span>
              faceTextureUrl<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token function">getFaceTextureUrl</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
              idx<span class="token operator">=</span><span class="token punctuation">&#123;</span>idx<span class="token punctuation">&#125;</span>
              beginX<span class="token operator">=</span><span class="token punctuation">&#123;</span>_beginX<span class="token punctuation">&#125;</span>
              serial<span class="token operator">=</span><span class="token punctuation">&#123;</span>serial<span class="token punctuation">&#125;</span>
            <span class="token operator">/</span><span class="token operator">></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>group<span class="token operator">></span>
      <span class="token operator">&lt;</span>group position<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span> scale<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">.6</span><span class="token punctuation">&#125;</span> name<span class="token operator">=</span><span class="token string">"out-list-2"</span><span class="token operator">></span>
        <span class="token punctuation">&#123;</span>props<span class="token punctuation">.</span>outCards<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>serial<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> idx<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>Card
              key<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"k"</span> <span class="token operator">+</span> serial<span class="token punctuation">&#125;</span>
              faceTextureUrl<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token function">getFaceTextureUrl</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
              idx<span class="token operator">=</span><span class="token punctuation">&#123;</span>idx<span class="token punctuation">&#125;</span>
              beginX<span class="token operator">=</span><span class="token punctuation">&#123;</span>_beginX<span class="token punctuation">&#125;</span>
              serial<span class="token operator">=</span><span class="token punctuation">&#123;</span>serial<span class="token punctuation">&#125;</span>
            <span class="token operator">/</span><span class="token operator">></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>group<span class="token operator">></span>
      <span class="token operator">&lt;</span>group position<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span> scale<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">.6</span><span class="token punctuation">&#125;</span> name<span class="token operator">=</span><span class="token string">"out-list-0"</span><span class="token operator">></span>
        <span class="token punctuation">&#123;</span>props<span class="token punctuation">.</span>outCards<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>serial<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> idx<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>Card
              key<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"k"</span> <span class="token operator">+</span> serial<span class="token punctuation">&#125;</span>
              faceTextureUrl<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token function">getFaceTextureUrl</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
              idx<span class="token operator">=</span><span class="token punctuation">&#123;</span>idx<span class="token punctuation">&#125;</span>
              beginX<span class="token operator">=</span><span class="token punctuation">&#123;</span>_beginX<span class="token punctuation">&#125;</span>
              serial<span class="token operator">=</span><span class="token punctuation">&#123;</span>serial<span class="token punctuation">&#125;</span>
            <span class="token operator">/</span><span class="token operator">></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>group<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`,Zs,gn,dp,Ws,Z,oo=`<code class="language-typescript"><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> OrbitControls <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">CameraControls</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>
    camera<span class="token punctuation">,</span>
    gl<span class="token operator">:</span> <span class="token punctuation">&#123;</span> domElement <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">useThree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> controls <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">useFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token punctuation">(</span>controls<span class="token punctuation">.</span>current <span class="token keyword">as</span> <span class="token builtin">unknown</span> <span class="token keyword">as</span> OrbitControls<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token comment">// @ts-ignore</span>
    <span class="token operator">&lt;</span>orbitControls
      ref<span class="token operator">=</span><span class="token punctuation">&#123;</span>controls<span class="token punctuation">&#125;</span>
      args<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span>camera<span class="token punctuation">,</span> domElement<span class="token punctuation">]</span><span class="token punctuation">&#125;</span>
      enableZoom<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token boolean">false</span><span class="token punctuation">&#125;</span>
      maxAzimuthAngle<span class="token operator">=</span><span class="token punctuation">&#123;</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">&#125;</span>
      maxPolarAngle<span class="token operator">=</span><span class="token punctuation">&#123;</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">&#125;</span>
      minAzimuthAngle<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token operator">-</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">&#125;</span>
      minPolarAngle<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">&#125;</span>
      rotationSpeed<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0.01</span><span class="token punctuation">&#125;</span>
    <span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`,Ks,_n,mp,Qs,W,eo=`<code class="language-typescript"><span class="token comment">//App.tsx</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> useEffect<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Canvas<span class="token punctuation">,</span> extend<span class="token punctuation">,</span> useFrame<span class="token punctuation">,</span> useThree <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"@react-three/fiber"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> OrbitControls <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"three/examples/jsm/controls/OrbitControls"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">"./App.css"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Card <span class="token keyword">from</span> <span class="token string">"./component/Card"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> GameModel <span class="token keyword">from</span> <span class="token string">"./base/src/game/model/GameModel"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> GameSceneMediator <span class="token keyword">from</span> <span class="token string">"./base/src/game/view/GameSceneMediator"</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> GameSceneView <span class="token keyword">from</span> <span class="token string">"./component/GameSceneView"</span><span class="token punctuation">;</span>

<span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> OrbitControls <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">CameraControls</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>
    camera<span class="token punctuation">,</span>
    gl<span class="token operator">:</span> <span class="token punctuation">&#123;</span> domElement <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">useThree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> controls <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">useFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token punctuation">(</span>controls<span class="token punctuation">.</span>current <span class="token keyword">as</span> <span class="token builtin">unknown</span> <span class="token keyword">as</span> OrbitControls<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token comment">// @ts-ignore</span>
    <span class="token operator">&lt;</span>orbitControls
      ref<span class="token operator">=</span><span class="token punctuation">&#123;</span>controls<span class="token punctuation">&#125;</span>
      args<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span>camera<span class="token punctuation">,</span> domElement<span class="token punctuation">]</span><span class="token punctuation">&#125;</span>
      enableZoom<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token boolean">false</span><span class="token punctuation">&#125;</span>
      maxAzimuthAngle<span class="token operator">=</span><span class="token punctuation">&#123;</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">&#125;</span>
      maxPolarAngle<span class="token operator">=</span><span class="token punctuation">&#123;</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">&#125;</span>
      minAzimuthAngle<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token operator">-</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">&#125;</span>
      minPolarAngle<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">&#125;</span>
      rotationSpeed<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0.01</span><span class="token punctuation">&#125;</span>
    <span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">R3fScene</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
  props<span class="token operator">:</span> <span class="token punctuation">&#123;</span> mainHandCards<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> gameModel<span class="token punctuation">;</span> outCards<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>
    scene<span class="token punctuation">,</span>
    camera<span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">useThree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> mainHandCards <span class="token operator">=</span> props<span class="token punctuation">.</span>mainHandCards<span class="token punctuation">;</span>
  <span class="token keyword">let</span> _gameModel <span class="token operator">=</span> props<span class="token punctuation">.</span>gameModel<span class="token punctuation">;</span>
  _gameModel<span class="token punctuation">.</span>context <span class="token operator">=</span> scene<span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">getFaceTextureUrl</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">let</span> _prefix <span class="token operator">=</span> <span class="token string">"/faces/"</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> _readableName <span class="token operator">=</span> _gameModel<span class="token punctuation">.</span><span class="token function">getCardReadableName</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>_readableName <span class="token operator">===</span> <span class="token string">"rJkr"</span><span class="token punctuation">)</span> <span class="token keyword">return</span> _prefix <span class="token operator">+</span> <span class="token string">"Poker_Joker_B.png"</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>_readableName <span class="token operator">===</span> <span class="token string">"bJkr"</span><span class="token punctuation">)</span> <span class="token keyword">return</span> _prefix <span class="token operator">+</span> <span class="token string">"Poker_Joker_R.png"</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">let</span> _suitDic <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token string">"D"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token string">"H"</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">:</span> <span class="token string">"S"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> _suitNumber<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> serial <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> _prefix <span class="token operator">+</span> <span class="token string">"Poker_"</span> <span class="token operator">+</span> _suitDic<span class="token punctuation">[</span>_suitNumber<span class="token punctuation">]</span> <span class="token operator">+</span> _readableName <span class="token operator">+</span>
        <span class="token string">".png"</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token keyword">let</span> _cardCount <span class="token operator">=</span> mainHandCards<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">let</span> _beginX <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_cardCount <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">.5</span> <span class="token operator">+</span> <span class="token number">1.5</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>CameraControls <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>ambientLight intensity<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0.1</span><span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>directionalLight color<span class="token operator">=</span><span class="token string">"white"</span> position<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span> <span class="token operator">/</span><span class="token operator">></span>

      <span class="token operator">&lt;</span>group name<span class="token operator">=</span><span class="token string">"handList"</span><span class="token operator">></span>
        <span class="token punctuation">&#123;</span>mainHandCards<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>serial<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> idx<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>Card
              key<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"k"</span> <span class="token operator">+</span> serial<span class="token punctuation">&#125;</span>
              faceTextureUrl<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token function">getFaceTextureUrl</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
              idx<span class="token operator">=</span><span class="token punctuation">&#123;</span>idx<span class="token punctuation">&#125;</span>
              beginX<span class="token operator">=</span><span class="token punctuation">&#123;</span>_beginX<span class="token punctuation">&#125;</span>
              serial<span class="token operator">=</span><span class="token punctuation">&#123;</span>serial<span class="token punctuation">&#125;</span>
            <span class="token operator">/</span><span class="token operator">></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>group<span class="token operator">></span>
      <span class="token operator">&lt;</span>group position<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span> scale<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">.6</span><span class="token punctuation">&#125;</span> name<span class="token operator">=</span><span class="token string">"out-list-1"</span><span class="token operator">></span>
        <span class="token punctuation">&#123;</span>props<span class="token punctuation">.</span>outCards<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>serial<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> idx<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>Card
              key<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"k"</span> <span class="token operator">+</span> serial<span class="token punctuation">&#125;</span>
              faceTextureUrl<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token function">getFaceTextureUrl</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
              idx<span class="token operator">=</span><span class="token punctuation">&#123;</span>idx<span class="token punctuation">&#125;</span>
              beginX<span class="token operator">=</span><span class="token punctuation">&#123;</span>_beginX<span class="token punctuation">&#125;</span>
              serial<span class="token operator">=</span><span class="token punctuation">&#123;</span>serial<span class="token punctuation">&#125;</span>
            <span class="token operator">/</span><span class="token operator">></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>group<span class="token operator">></span>
      <span class="token operator">&lt;</span>group position<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span> scale<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">.6</span><span class="token punctuation">&#125;</span> name<span class="token operator">=</span><span class="token string">"out-list-2"</span><span class="token operator">></span>
        <span class="token punctuation">&#123;</span>props<span class="token punctuation">.</span>outCards<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>serial<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> idx<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>Card
              key<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"k"</span> <span class="token operator">+</span> serial<span class="token punctuation">&#125;</span>
              faceTextureUrl<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token function">getFaceTextureUrl</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
              idx<span class="token operator">=</span><span class="token punctuation">&#123;</span>idx<span class="token punctuation">&#125;</span>
              beginX<span class="token operator">=</span><span class="token punctuation">&#123;</span>_beginX<span class="token punctuation">&#125;</span>
              serial<span class="token operator">=</span><span class="token punctuation">&#123;</span>serial<span class="token punctuation">&#125;</span>
            <span class="token operator">/</span><span class="token operator">></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>group<span class="token operator">></span>
      <span class="token operator">&lt;</span>group position<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span> scale<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">.6</span><span class="token punctuation">&#125;</span> name<span class="token operator">=</span><span class="token string">"out-list-0"</span><span class="token operator">></span>
        <span class="token punctuation">&#123;</span>props<span class="token punctuation">.</span>outCards<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>serial<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> idx<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>Card
              key<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"k"</span> <span class="token operator">+</span> serial<span class="token punctuation">&#125;</span>
              faceTextureUrl<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token function">getFaceTextureUrl</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
              idx<span class="token operator">=</span><span class="token punctuation">&#123;</span>idx<span class="token punctuation">&#125;</span>
              beginX<span class="token operator">=</span><span class="token punctuation">&#123;</span>_beginX<span class="token punctuation">&#125;</span>
              serial<span class="token operator">=</span><span class="token punctuation">&#123;</span>serial<span class="token punctuation">&#125;</span>
            <span class="token operator">/</span><span class="token operator">></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>group<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span>props<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">let</span> _gameFacade <span class="token operator">=</span> props<span class="token punctuation">.</span>gameFacade<span class="token punctuation">;</span>
  <span class="token keyword">let</span> _gameModel<span class="token operator">:</span> GameModel <span class="token operator">=</span> _gameFacade<span class="token punctuation">.</span><span class="token function">retrieveProxy</span><span class="token punctuation">(</span><span class="token string">"GameModel"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token punctuation">[</span>mainHandCards<span class="token punctuation">,</span> setMainHandCards<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>_gameModel<span class="token punctuation">.</span>cardsArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token punctuation">[</span>outCards<span class="token punctuation">,</span> setOutCards<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>_gameModel<span class="token punctuation">.</span>outCards<span class="token punctuation">)</span><span class="token punctuation">;</span>
  _gameModel<span class="token punctuation">.</span><span class="token function">setMainHandCardsHook</span><span class="token punctuation">(</span>setMainHandCards<span class="token punctuation">)</span><span class="token punctuation">;</span>
  _gameModel<span class="token punctuation">.</span><span class="token function">setOutCardsHook</span><span class="token punctuation">(</span>setOutCards<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>_gameFacade<span class="token punctuation">.</span><span class="token function">retrieveMediator</span><span class="token punctuation">(</span><span class="token string">"GameSceneMediator"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
      _gameFacade<span class="token punctuation">.</span><span class="token function">registerMediator</span><span class="token punctuation">(</span>
        <span class="token keyword">new</span> <span class="token class-name">GameSceneMediator</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">GameSceneView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"canvas-container"</span><span class="token operator">></span>
        <span class="token operator">&lt;</span>Canvas
          orthographic
          camera<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> zoom<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> position<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span> rotation<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>
        <span class="token operator">></span>
          <span class="token operator">&lt;</span>R3fScene
            mainHandCards<span class="token operator">=</span><span class="token punctuation">&#123;</span>mainHandCards<span class="token punctuation">&#125;</span>
            outCards<span class="token operator">=</span><span class="token punctuation">&#123;</span>outCards<span class="token punctuation">&#125;</span>
            gameModel<span class="token operator">=</span><span class="token punctuation">&#123;</span>_gameModel<span class="token punctuation">&#125;</span>
          <span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>R3fScene<span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Canvas<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>

      <span class="token operator">&lt;</span>div
        id<span class="token operator">=</span><span class="token string">"status"</span>
        style<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>
          display<span class="token operator">:</span> <span class="token string">"fix"</span><span class="token punctuation">,</span>
          textAlign<span class="token operator">:</span> <span class="token string">"center"</span><span class="token punctuation">,</span>
          fontSize<span class="token operator">:</span> <span class="token string">"2em"</span><span class="token punctuation">,</span>
          userSelect<span class="token operator">:</span> <span class="token string">"none"</span><span class="token punctuation">,</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>
      <span class="token operator">></span>
        hello
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
      <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"controlPanel-scores"</span> className<span class="token operator">=</span><span class="token string">"controlPanel"</span><span class="token operator">></span>
        <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"controlPanel-scores-1"</span> className<span class="token operator">=</span><span class="token string">"controlButton"</span><span class="token operator">></span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>
        <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"controlPanel-scores-2"</span> className<span class="token operator">=</span><span class="token string">"controlButton"</span><span class="token operator">></span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>
        <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"controlPanel-scores-3"</span> className<span class="token operator">=</span><span class="token string">"controlButton"</span><span class="token operator">></span><span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>

      <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"controlPanel-operation"</span> className<span class="token operator">=</span><span class="token string">"controlPanel"</span><span class="token operator">></span>
        <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"controlPanel-operation-pass"</span> className<span class="token operator">=</span><span class="token string">"controlButton"</span><span class="token operator">></span>
          pass
        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>
        <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">"controlPanel-operation-play"</span> className<span class="token operator">=</span><span class="token string">"controlButton"</span><span class="token operator">></span>
          play
        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span></code>`,$s,A,C,ss,fp,bp,na,wn,as,ps,yp,sa,K,co=`<code class="language-typescript"><span class="token function">getViewComponent</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>isDOM<span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>canvasScene<span class="token operator">:</span><span class="token builtin">any</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>isDOM<span class="token punctuation">)</span> <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>canvasScene<span class="token punctuation">)</span> <span class="token keyword">return</span> canvasScene<span class="token punctuation">.</span><span class="token function">getObjectByName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span></code>`,aa,Cn,gp,pa,hn,ts,os,_p,ta,Q,lo=`<code class="language-typescript"><span class="token keyword">private</span> <span class="token function">onOutCards_C2S</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hideControlPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> _outCardsSerial <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> _cardsContainer <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mViewClass<span class="token punctuation">.</span><span class="token function">getViewComponent</span><span class="token punctuation">(</span><span class="token string">"handList"</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getGameModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> _cards <span class="token operator">=</span> _cardsContainer<span class="token punctuation">.</span>children<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> _cards<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token keyword">let</span> _card <span class="token operator">=</span> _cards<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>mViewClass<span class="token punctuation">.</span><span class="token function">isCardSelected</span><span class="token punctuation">(</span>_card<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
                _outCardsSerial<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>_card<span class="token punctuation">.</span>userData<span class="token punctuation">[</span><span class="token string">"_d_cardSerial"</span><span class="token punctuation">]</span><span class="token operator">||</span>_card<span class="token punctuation">[</span><span class="token string">"_d_cardSerial"</span><span class="token punctuation">]</span> <span class="token operator">||</span> _card<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"data-card-serial"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getNetFacade</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">?.</span><span class="token function">sendNotification</span><span class="token punctuation">(</span>card_game_pb<span class="token punctuation">.</span>Cmd<span class="token punctuation">.</span><span class="token constant">PLAYCARDS_C2S</span><span class="token punctuation">,</span> _outCardsSerial<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span></code>`,oa,vn,es,cs,wp,ea,xn,Cp,ca,$,uo=`<code class="language-typescript"><span class="token function">isCardSelected</span><span class="token punctuation">(</span>card<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> card<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">==</span> <span class="token number">.2</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span></code>`,la,En,nn,hp;return{c(){d=o("h2"),m=o("a"),Pn=o("span"),fa=l("#"),ba=l("Make a multiplayer card game - Episode 7 | Create 3D graphical interface with Three.js"),ls=k(),h=o("p"),ya=l(`This section mainly introduces the use
of`),L=o("a"),ga=l("react-three-fiber"),_a=l(`(referred
to as R3F bellow) to realize the construction of interactive scenes.`),us=k(),v=o("h3"),f=o("a"),Sn=o("span"),wa=l("#"),Ca=l("Why Choose R3F"),rs=k(),x=o("ul"),Tn=o("li"),ha=l("R3F just expresses Three.js in JSX, no extra overhead"),va=k(),Nn=o("li"),xa=l(`Build scenes in a declarative way with react, including but not limited to
components that can easily react to state, are easy to interact with, and can
leverage React’s ecosystem`),ks=k(),E=o("h3"),b=o("a"),Rn=o("span"),Ea=l("#"),Ma=l("Scenario construction implementation"),is=k(),sn=o("ul"),Hn=o("li"),An=o("strong"),Pa=l("Card"),ds=k(),F=o("p"),Sa=l(`Note that the texture required for rendering is obtained by passing the image
address to `),Ln=o("code"),Ta=l("useTexture"),ms=k(),O=o("pre"),fs=k(),an=o("ul"),Fn=o("li"),On=o("strong"),Na=l("Game Scene"),bs=k(),pn=o("p"),Ra=l(`First you must declare a Canvas node, because all three.js must be under the
Canvas node`),ys=k(),U=o("pre"),gs=k(),tn=o("p"),Ha=l("In order to facilitate the use of hooks provided by"),_s=k(),on=o("code"),Aa=l("@react-three/fiber"),ws=l(` (three.js related hooks can only be used under
the Canvas node), the game scene node is proposed separately
`),j=o("pre"),Cs=k(),en=o("p"),La=l(`In order to reflect the 3D interface, add an orbiting camera (swipe the scene to
adjust the camera corner)`),hs=k(),X=o("pre"),vs=k(),cn=o("p"),Fa=l("Scene complete code："),xs=k(),G=o("pre"),Es=k(),M=o("h3"),y=o("a"),Un=o("span"),Oa=l("#"),Ua=l("Framework adaptation changes"),Ms=k(),ln=o("ul"),jn=o("li"),Xn=o("strong"),ja=l("Getting scene node"),Ps=k(),D=o("pre"),Ss=k(),un=o("p"),Xa=l(`By passing in the scene object of three.js, call the getObjectByName interface
to obtain the node with the pre-set name attribute`),Ts=k(),rn=o("ul"),Gn=o("li"),g=o("strong"),Ga=l("Card value acquisition, card.userData ("),Dn=o("code"),Da=l("userData"),Ia=l(` is the loading
object of custom attributes in R3F, similar to `),In=o("code"),Ba=l("data-yourAttribute"),za=l(`
in react, here you can encapsulate a method to decouple GameSceneMediator from
card value, making the mediator more reusable )`),Ns=k(),I=o("pre"),Rs=k(),kn=o("ul"),Bn=o("li"),zn=o("strong"),Ja=l("Node coordinate adjustment"),Hs=k(),dn=o("p"),Va=l(`By judging the adjustment of the corresponding css attribute of the node style
to the corresponding attribute of the node position object`),As=k(),B=o("pre"),Ls=k(),mn=o("p"),z=o("a"),Ya=l("Checkout the repo https://github.com/lizhiyu-me/Make-a-multiplayer-card-game/tree/episode7-r3f"),Fs=k(),Os=o("hr"),Us=k(),P=o("p"),qa=l("本节主要介绍利用"),J=o("a"),Za=l("react-three-fiber"),Wa=l("(以下简称R3F)实现交互场景的搭建。"),js=k(),S=o("h3"),_=o("a"),Jn=o("span"),Ka=l("#"),Qa=l("为什么选择R3F"),Xs=k(),T=o("ul"),Vn=o("li"),$a=l("R3F仅仅是将Three.js用JSX进行表示，没有额外开销"),np=k(),Yn=o("li"),sp=l(`可以用react的声明方式构建场景，包括但不限于组件可轻松对状态做出反应，易于交互，并且可以利用
React 的生态`),Gs=k(),N=o("h3"),w=o("a"),qn=o("span"),ap=l("#"),pp=l("场景构建实现"),Ds=k(),fn=o("ul"),Zn=o("li"),Wn=o("strong"),tp=l("扑克牌"),Is=k(),R=o("p"),op=l("注意此处通过将图片地址传给"),Kn=o("code"),ep=l("useTexture"),cp=l("，得到渲染需要的纹理"),Bs=k(),V=o("pre"),zs=k(),bn=o("ul"),Qn=o("li"),$n=o("strong"),lp=l("游戏场景"),Js=k(),yn=o("p"),up=l("首先必须声明一个Canvas节点，因为three.js的所有都必须在Canvas节点下"),Vs=k(),Y=o("pre"),Ys=k(),H=o("p"),rp=l("为了方便使用"),ns=o("code"),kp=l("@react-three/fiber"),ip=l("提供的hook（three.js相关的hook只能在Canvas节点下使用）,将游戏场景节点单独提出来"),qs=k(),q=o("pre"),Zs=k(),gn=o("p"),dp=l("为了体现3D界面，添加一个轨道相机（滑动场景即可调整相机转角）"),Ws=k(),Z=o("pre"),Ks=k(),_n=o("p"),mp=l("场景完整代码："),Qs=k(),W=o("pre"),$s=k(),A=o("h3"),C=o("a"),ss=o("span"),fp=l("#"),bp=l("框架适配改动"),na=k(),wn=o("ul"),as=o("li"),ps=o("strong"),yp=l("获取场景节点"),sa=k(),K=o("pre"),aa=k(),Cn=o("p"),gp=l("通过传入three.js的场景对象，调用getObjectByName接口获取预先设置好name属性的节点"),pa=k(),hn=o("ul"),ts=o("li"),os=o("strong"),_p=l(`牌值获取card.userData（userData是R3F中自定义属性的装载对象，类似react中的data-yourAttribute,
在这里可以封装一个方法，让GameSceneMediator与牌取值解耦，使mediator的复用性更强）`),ta=k(),Q=o("pre"),oa=k(),vn=o("ul"),es=o("li"),cs=o("strong"),wp=l("节点坐标调整"),ea=k(),xn=o("p"),Cp=l("由判断节点style 相应css属性的调整为节点position对象相应属性"),ca=k(),$=o("pre"),la=k(),En=o("p"),nn=o("a"),hp=l("查看本节相关代码 https://github.com/lizhiyu-me/Make-a-multiplayer-card-game/tree/episode7-r3f"),this.h()},l(n){d=e(n,"H2",{id:!0});var a=c(d);m=e(a,"A",{class:!0,title:!0,"aria-hidden":!0,href:!0});var Rp=c(m);Pn=e(Rp,"SPAN",{});var Hp=c(Pn);fa=u(Hp,"#"),Hp.forEach(s),Rp.forEach(s),ba=u(a,"Make a multiplayer card game - Episode 7 | Create 3D graphical interface with Three.js"),a.forEach(s),ls=i(n),h=e(n,"P",{});var ua=c(h);ya=u(ua,`This section mainly introduces the use
of`),L=e(ua,"A",{href:!0,rel:!0});var Ap=c(L);ga=u(Ap,"react-three-fiber"),Ap.forEach(s),_a=u(ua,`(referred
to as R3F bellow) to realize the construction of interactive scenes.`),ua.forEach(s),us=i(n),v=e(n,"H3",{id:!0});var vp=c(v);f=e(vp,"A",{class:!0,title:!0,"aria-hidden":!0,href:!0});var Lp=c(f);Sn=e(Lp,"SPAN",{});var Fp=c(Sn);wa=u(Fp,"#"),Fp.forEach(s),Lp.forEach(s),Ca=u(vp,"Why Choose R3F"),vp.forEach(s),rs=i(n),x=e(n,"UL",{});var ra=c(x);Tn=e(ra,"LI",{});var Op=c(Tn);ha=u(Op,"R3F just expresses Three.js in JSX, no extra overhead"),Op.forEach(s),va=i(ra),Nn=e(ra,"LI",{});var Up=c(Nn);xa=u(Up,`Build scenes in a declarative way with react, including but not limited to
components that can easily react to state, are easy to interact with, and can
leverage React’s ecosystem`),Up.forEach(s),ra.forEach(s),ks=i(n),E=e(n,"H3",{id:!0});var xp=c(E);b=e(xp,"A",{class:!0,title:!0,"aria-hidden":!0,href:!0});var jp=c(b);Rn=e(jp,"SPAN",{});var Xp=c(Rn);Ea=u(Xp,"#"),Xp.forEach(s),jp.forEach(s),Ma=u(xp,"Scenario construction implementation"),xp.forEach(s),is=i(n),sn=e(n,"UL",{});var Gp=c(sn);Hn=e(Gp,"LI",{});var Dp=c(Hn);An=e(Dp,"STRONG",{});var Ip=c(An);Pa=u(Ip,"Card"),Ip.forEach(s),Dp.forEach(s),Gp.forEach(s),ds=i(n),F=e(n,"P",{});var Ep=c(F);Sa=u(Ep,`Note that the texture required for rendering is obtained by passing the image
address to `),Ln=e(Ep,"CODE",{});var Bp=c(Ln);Ta=u(Bp,"useTexture"),Bp.forEach(s),Ep.forEach(s),ms=i(n),O=e(n,"PRE",{class:!0});var ro=c(O);ro.forEach(s),fs=i(n),an=e(n,"UL",{});var zp=c(an);Fn=e(zp,"LI",{});var Jp=c(Fn);On=e(Jp,"STRONG",{});var Vp=c(On);Na=u(Vp,"Game Scene"),Vp.forEach(s),Jp.forEach(s),zp.forEach(s),bs=i(n),pn=e(n,"P",{});var Yp=c(pn);Ra=u(Yp,`First you must declare a Canvas node, because all three.js must be under the
Canvas node`),Yp.forEach(s),ys=i(n),U=e(n,"PRE",{class:!0});var ko=c(U);ko.forEach(s),gs=i(n),tn=e(n,"P",{});var qp=c(tn);Ha=u(qp,"In order to facilitate the use of hooks provided by"),qp.forEach(s),_s=i(n),on=e(n,"CODE",{});var Zp=c(on);Aa=u(Zp,"@react-three/fiber"),Zp.forEach(s),ws=u(n,` (three.js related hooks can only be used under
the Canvas node), the game scene node is proposed separately
`),j=e(n,"PRE",{class:!0});var io=c(j);io.forEach(s),Cs=i(n),en=e(n,"P",{});var Wp=c(en);La=u(Wp,`In order to reflect the 3D interface, add an orbiting camera (swipe the scene to
adjust the camera corner)`),Wp.forEach(s),hs=i(n),X=e(n,"PRE",{class:!0});var mo=c(X);mo.forEach(s),vs=i(n),cn=e(n,"P",{});var Kp=c(cn);Fa=u(Kp,"Scene complete code："),Kp.forEach(s),xs=i(n),G=e(n,"PRE",{class:!0});var fo=c(G);fo.forEach(s),Es=i(n),M=e(n,"H3",{id:!0});var Mp=c(M);y=e(Mp,"A",{class:!0,title:!0,"aria-hidden":!0,href:!0});var Qp=c(y);Un=e(Qp,"SPAN",{});var $p=c(Un);Oa=u($p,"#"),$p.forEach(s),Qp.forEach(s),Ua=u(Mp,"Framework adaptation changes"),Mp.forEach(s),Ms=i(n),ln=e(n,"UL",{});var nt=c(ln);jn=e(nt,"LI",{});var st=c(jn);Xn=e(st,"STRONG",{});var at=c(Xn);ja=u(at,"Getting scene node"),at.forEach(s),st.forEach(s),nt.forEach(s),Ps=i(n),D=e(n,"PRE",{class:!0});var bo=c(D);bo.forEach(s),Ss=i(n),un=e(n,"P",{});var pt=c(un);Xa=u(pt,`By passing in the scene object of three.js, call the getObjectByName interface
to obtain the node with the pre-set name attribute`),pt.forEach(s),Ts=i(n),rn=e(n,"UL",{});var tt=c(rn);Gn=e(tt,"LI",{});var ot=c(Gn);g=e(ot,"STRONG",{});var Mn=c(g);Ga=u(Mn,"Card value acquisition, card.userData ("),Dn=e(Mn,"CODE",{});var et=c(Dn);Da=u(et,"userData"),et.forEach(s),Ia=u(Mn,` is the loading
object of custom attributes in R3F, similar to `),In=e(Mn,"CODE",{});var ct=c(In);Ba=u(ct,"data-yourAttribute"),ct.forEach(s),za=u(Mn,`
in react, here you can encapsulate a method to decouple GameSceneMediator from
card value, making the mediator more reusable )`),Mn.forEach(s),ot.forEach(s),tt.forEach(s),Ns=i(n),I=e(n,"PRE",{class:!0});var yo=c(I);yo.forEach(s),Rs=i(n),kn=e(n,"UL",{});var lt=c(kn);Bn=e(lt,"LI",{});var ut=c(Bn);zn=e(ut,"STRONG",{});var rt=c(zn);Ja=u(rt,"Node coordinate adjustment"),rt.forEach(s),ut.forEach(s),lt.forEach(s),Hs=i(n),dn=e(n,"P",{});var kt=c(dn);Va=u(kt,`By judging the adjustment of the corresponding css attribute of the node style
to the corresponding attribute of the node position object`),kt.forEach(s),As=i(n),B=e(n,"PRE",{class:!0});var go=c(B);go.forEach(s),Ls=i(n),mn=e(n,"P",{});var it=c(mn);z=e(it,"A",{href:!0,rel:!0});var dt=c(z);Ya=u(dt,"Checkout the repo https://github.com/lizhiyu-me/Make-a-multiplayer-card-game/tree/episode7-r3f"),dt.forEach(s),it.forEach(s),Fs=i(n),Os=e(n,"HR",{}),Us=i(n),P=e(n,"P",{});var ka=c(P);qa=u(ka,"本节主要介绍利用"),J=e(ka,"A",{href:!0,rel:!0});var mt=c(J);Za=u(mt,"react-three-fiber"),mt.forEach(s),Wa=u(ka,"(以下简称R3F)实现交互场景的搭建。"),ka.forEach(s),js=i(n),S=e(n,"H3",{id:!0});var Pp=c(S);_=e(Pp,"A",{class:!0,title:!0,"aria-hidden":!0,href:!0});var ft=c(_);Jn=e(ft,"SPAN",{});var bt=c(Jn);Ka=u(bt,"#"),bt.forEach(s),ft.forEach(s),Qa=u(Pp,"为什么选择R3F"),Pp.forEach(s),Xs=i(n),T=e(n,"UL",{});var ia=c(T);Vn=e(ia,"LI",{});var yt=c(Vn);$a=u(yt,"R3F仅仅是将Three.js用JSX进行表示，没有额外开销"),yt.forEach(s),np=i(ia),Yn=e(ia,"LI",{});var gt=c(Yn);sp=u(gt,`可以用react的声明方式构建场景，包括但不限于组件可轻松对状态做出反应，易于交互，并且可以利用
React 的生态`),gt.forEach(s),ia.forEach(s),Gs=i(n),N=e(n,"H3",{id:!0});var Sp=c(N);w=e(Sp,"A",{class:!0,title:!0,"aria-hidden":!0,href:!0});var _t=c(w);qn=e(_t,"SPAN",{});var wt=c(qn);ap=u(wt,"#"),wt.forEach(s),_t.forEach(s),pp=u(Sp,"场景构建实现"),Sp.forEach(s),Ds=i(n),fn=e(n,"UL",{});var Ct=c(fn);Zn=e(Ct,"LI",{});var ht=c(Zn);Wn=e(ht,"STRONG",{});var vt=c(Wn);tp=u(vt,"扑克牌"),vt.forEach(s),ht.forEach(s),Ct.forEach(s),Is=i(n),R=e(n,"P",{});var da=c(R);op=u(da,"注意此处通过将图片地址传给"),Kn=e(da,"CODE",{});var xt=c(Kn);ep=u(xt,"useTexture"),xt.forEach(s),cp=u(da,"，得到渲染需要的纹理"),da.forEach(s),Bs=i(n),V=e(n,"PRE",{class:!0});var _o=c(V);_o.forEach(s),zs=i(n),bn=e(n,"UL",{});var Et=c(bn);Qn=e(Et,"LI",{});var Mt=c(Qn);$n=e(Mt,"STRONG",{});var Pt=c($n);lp=u(Pt,"游戏场景"),Pt.forEach(s),Mt.forEach(s),Et.forEach(s),Js=i(n),yn=e(n,"P",{});var St=c(yn);up=u(St,"首先必须声明一个Canvas节点，因为three.js的所有都必须在Canvas节点下"),St.forEach(s),Vs=i(n),Y=e(n,"PRE",{class:!0});var wo=c(Y);wo.forEach(s),Ys=i(n),H=e(n,"P",{});var ma=c(H);rp=u(ma,"为了方便使用"),ns=e(ma,"CODE",{});var Tt=c(ns);kp=u(Tt,"@react-three/fiber"),Tt.forEach(s),ip=u(ma,"提供的hook（three.js相关的hook只能在Canvas节点下使用）,将游戏场景节点单独提出来"),ma.forEach(s),qs=i(n),q=e(n,"PRE",{class:!0});var Co=c(q);Co.forEach(s),Zs=i(n),gn=e(n,"P",{});var Nt=c(gn);dp=u(Nt,"为了体现3D界面，添加一个轨道相机（滑动场景即可调整相机转角）"),Nt.forEach(s),Ws=i(n),Z=e(n,"PRE",{class:!0});var ho=c(Z);ho.forEach(s),Ks=i(n),_n=e(n,"P",{});var Rt=c(_n);mp=u(Rt,"场景完整代码："),Rt.forEach(s),Qs=i(n),W=e(n,"PRE",{class:!0});var vo=c(W);vo.forEach(s),$s=i(n),A=e(n,"H3",{id:!0});var Tp=c(A);C=e(Tp,"A",{class:!0,title:!0,"aria-hidden":!0,href:!0});var Ht=c(C);ss=e(Ht,"SPAN",{});var At=c(ss);fp=u(At,"#"),At.forEach(s),Ht.forEach(s),bp=u(Tp,"框架适配改动"),Tp.forEach(s),na=i(n),wn=e(n,"UL",{});var Lt=c(wn);as=e(Lt,"LI",{});var Ft=c(as);ps=e(Ft,"STRONG",{});var Ot=c(ps);yp=u(Ot,"获取场景节点"),Ot.forEach(s),Ft.forEach(s),Lt.forEach(s),sa=i(n),K=e(n,"PRE",{class:!0});var xo=c(K);xo.forEach(s),aa=i(n),Cn=e(n,"P",{});var Ut=c(Cn);gp=u(Ut,"通过传入three.js的场景对象，调用getObjectByName接口获取预先设置好name属性的节点"),Ut.forEach(s),pa=i(n),hn=e(n,"UL",{});var jt=c(hn);ts=e(jt,"LI",{});var Xt=c(ts);os=e(Xt,"STRONG",{});var Gt=c(os);_p=u(Gt,`牌值获取card.userData（userData是R3F中自定义属性的装载对象，类似react中的data-yourAttribute,
在这里可以封装一个方法，让GameSceneMediator与牌取值解耦，使mediator的复用性更强）`),Gt.forEach(s),Xt.forEach(s),jt.forEach(s),ta=i(n),Q=e(n,"PRE",{class:!0});var Eo=c(Q);Eo.forEach(s),oa=i(n),vn=e(n,"UL",{});var Dt=c(vn);es=e(Dt,"LI",{});var It=c(es);cs=e(It,"STRONG",{});var Bt=c(cs);wp=u(Bt,"节点坐标调整"),Bt.forEach(s),It.forEach(s),Dt.forEach(s),ea=i(n),xn=e(n,"P",{});var zt=c(xn);Cp=u(zt,"由判断节点style 相应css属性的调整为节点position对象相应属性"),zt.forEach(s),ca=i(n),$=e(n,"PRE",{class:!0});var Mo=c($);Mo.forEach(s),la=i(n),En=e(n,"P",{});var Jt=c(En);nn=e(Jt,"A",{href:!0,rel:!0});var Vt=c(nn);hp=u(Vt,"查看本节相关代码 https://github.com/lizhiyu-me/Make-a-multiplayer-card-game/tree/episode7-r3f"),Vt.forEach(s),Jt.forEach(s),this.h()},h(){r(m,"class","heading-link"),r(m,"title","Permalink"),r(m,"aria-hidden","true"),r(m,"href","#make-a-multiplayer-card-game---episode-7--create-3d-graphical-interface-with-threejs"),r(d,"id","make-a-multiplayer-card-game---episode-7--create-3d-graphical-interface-with-threejs"),r(L,"href","https://docs.pmnd.rs/react-three-fiber/getting-started/introduction"),r(L,"rel","nofollow"),r(f,"class","heading-link"),r(f,"title","Permalink"),r(f,"aria-hidden","true"),r(f,"href","#why-choose-r3f"),r(v,"id","why-choose-r3f"),r(b,"class","heading-link"),r(b,"title","Permalink"),r(b,"aria-hidden","true"),r(b,"href","#scenario-construction-implementation"),r(E,"id","scenario-construction-implementation"),r(O,"class","language-typescript"),r(U,"class","language-typescript"),r(j,"class","language-typescript"),r(X,"class","language-typescript"),r(G,"class","language-typescript"),r(y,"class","heading-link"),r(y,"title","Permalink"),r(y,"aria-hidden","true"),r(y,"href","#framework-adaptation-changes"),r(M,"id","framework-adaptation-changes"),r(D,"class","language-typescript"),r(I,"class","language-typescript"),r(B,"class","language-typescript"),r(z,"href","https://github.com/lizhiyu-me/Make-a-multiplayer-card-game/tree/episode7-r3f"),r(z,"rel","nofollow"),r(J,"href","https://docs.pmnd.rs/react-three-fiber/getting-started/introduction"),r(J,"rel","nofollow"),r(_,"class","heading-link"),r(_,"title","Permalink"),r(_,"aria-hidden","true"),r(_,"href","#为什么选择r3f"),r(S,"id","为什么选择r3f"),r(w,"class","heading-link"),r(w,"title","Permalink"),r(w,"aria-hidden","true"),r(w,"href","#场景构建实现"),r(N,"id","场景构建实现"),r(V,"class","language-typescript"),r(Y,"class","language-typescript"),r(q,"class","language-typescript"),r(Z,"class","language-typescript"),r(W,"class","language-typescript"),r(C,"class","heading-link"),r(C,"title","Permalink"),r(C,"aria-hidden","true"),r(C,"href","#框架适配改动"),r(A,"id","框架适配改动"),r(K,"class","language-typescript"),r(Q,"class","language-typescript"),r($,"class","language-typescript"),r(nn,"href","https://github.com/lizhiyu-me/Make-a-multiplayer-card-game/tree/episode7-r3f"),r(nn,"rel","nofollow")},m(n,a){p(n,d,a),t(d,m),t(m,Pn),t(Pn,fa),t(d,ba),p(n,ls,a),p(n,h,a),t(h,ya),t(h,L),t(L,ga),t(h,_a),p(n,us,a),p(n,v,a),t(v,f),t(f,Sn),t(Sn,wa),t(v,Ca),p(n,rs,a),p(n,x,a),t(x,Tn),t(Tn,ha),t(x,va),t(x,Nn),t(Nn,xa),p(n,ks,a),p(n,E,a),t(E,b),t(b,Rn),t(Rn,Ea),t(E,Ma),p(n,is,a),p(n,sn,a),t(sn,Hn),t(Hn,An),t(An,Pa),p(n,ds,a),p(n,F,a),t(F,Sa),t(F,Ln),t(Ln,Ta),p(n,ms,a),p(n,O,a),O.innerHTML=qt,p(n,fs,a),p(n,an,a),t(an,Fn),t(Fn,On),t(On,Na),p(n,bs,a),p(n,pn,a),t(pn,Ra),p(n,ys,a),p(n,U,a),U.innerHTML=Zt,p(n,gs,a),p(n,tn,a),t(tn,Ha),p(n,_s,a),p(n,on,a),t(on,Aa),p(n,ws,a),p(n,j,a),j.innerHTML=Wt,p(n,Cs,a),p(n,en,a),t(en,La),p(n,hs,a),p(n,X,a),X.innerHTML=Kt,p(n,vs,a),p(n,cn,a),t(cn,Fa),p(n,xs,a),p(n,G,a),G.innerHTML=Qt,p(n,Es,a),p(n,M,a),t(M,y),t(y,Un),t(Un,Oa),t(M,Ua),p(n,Ms,a),p(n,ln,a),t(ln,jn),t(jn,Xn),t(Xn,ja),p(n,Ps,a),p(n,D,a),D.innerHTML=$t,p(n,Ss,a),p(n,un,a),t(un,Xa),p(n,Ts,a),p(n,rn,a),t(rn,Gn),t(Gn,g),t(g,Ga),t(g,Dn),t(Dn,Da),t(g,Ia),t(g,In),t(In,Ba),t(g,za),p(n,Ns,a),p(n,I,a),I.innerHTML=no,p(n,Rs,a),p(n,kn,a),t(kn,Bn),t(Bn,zn),t(zn,Ja),p(n,Hs,a),p(n,dn,a),t(dn,Va),p(n,As,a),p(n,B,a),B.innerHTML=so,p(n,Ls,a),p(n,mn,a),t(mn,z),t(z,Ya),p(n,Fs,a),p(n,Os,a),p(n,Us,a),p(n,P,a),t(P,qa),t(P,J),t(J,Za),t(P,Wa),p(n,js,a),p(n,S,a),t(S,_),t(_,Jn),t(Jn,Ka),t(S,Qa),p(n,Xs,a),p(n,T,a),t(T,Vn),t(Vn,$a),t(T,np),t(T,Yn),t(Yn,sp),p(n,Gs,a),p(n,N,a),t(N,w),t(w,qn),t(qn,ap),t(N,pp),p(n,Ds,a),p(n,fn,a),t(fn,Zn),t(Zn,Wn),t(Wn,tp),p(n,Is,a),p(n,R,a),t(R,op),t(R,Kn),t(Kn,ep),t(R,cp),p(n,Bs,a),p(n,V,a),V.innerHTML=ao,p(n,zs,a),p(n,bn,a),t(bn,Qn),t(Qn,$n),t($n,lp),p(n,Js,a),p(n,yn,a),t(yn,up),p(n,Vs,a),p(n,Y,a),Y.innerHTML=po,p(n,Ys,a),p(n,H,a),t(H,rp),t(H,ns),t(ns,kp),t(H,ip),p(n,qs,a),p(n,q,a),q.innerHTML=to,p(n,Zs,a),p(n,gn,a),t(gn,dp),p(n,Ws,a),p(n,Z,a),Z.innerHTML=oo,p(n,Ks,a),p(n,_n,a),t(_n,mp),p(n,Qs,a),p(n,W,a),W.innerHTML=eo,p(n,$s,a),p(n,A,a),t(A,C),t(C,ss),t(ss,fp),t(A,bp),p(n,na,a),p(n,wn,a),t(wn,as),t(as,ps),t(ps,yp),p(n,sa,a),p(n,K,a),K.innerHTML=co,p(n,aa,a),p(n,Cn,a),t(Cn,gp),p(n,pa,a),p(n,hn,a),t(hn,ts),t(ts,os),t(os,_p),p(n,ta,a),p(n,Q,a),Q.innerHTML=lo,p(n,oa,a),p(n,vn,a),t(vn,es),t(es,cs),t(cs,wp),p(n,ea,a),p(n,xn,a),t(xn,Cp),p(n,ca,a),p(n,$,a),$.innerHTML=uo,p(n,la,a),p(n,En,a),t(En,nn),t(nn,hp)},p:Np,i:Np,o:Np,d(n){n&&s(d),n&&s(ls),n&&s(h),n&&s(us),n&&s(v),n&&s(rs),n&&s(x),n&&s(ks),n&&s(E),n&&s(is),n&&s(sn),n&&s(ds),n&&s(F),n&&s(ms),n&&s(O),n&&s(fs),n&&s(an),n&&s(bs),n&&s(pn),n&&s(ys),n&&s(U),n&&s(gs),n&&s(tn),n&&s(_s),n&&s(on),n&&s(ws),n&&s(j),n&&s(Cs),n&&s(en),n&&s(hs),n&&s(X),n&&s(vs),n&&s(cn),n&&s(xs),n&&s(G),n&&s(Es),n&&s(M),n&&s(Ms),n&&s(ln),n&&s(Ps),n&&s(D),n&&s(Ss),n&&s(un),n&&s(Ts),n&&s(rn),n&&s(Ns),n&&s(I),n&&s(Rs),n&&s(kn),n&&s(Hs),n&&s(dn),n&&s(As),n&&s(B),n&&s(Ls),n&&s(mn),n&&s(Fs),n&&s(Os),n&&s(Us),n&&s(P),n&&s(js),n&&s(S),n&&s(Xs),n&&s(T),n&&s(Gs),n&&s(N),n&&s(Ds),n&&s(fn),n&&s(Is),n&&s(R),n&&s(Bs),n&&s(V),n&&s(zs),n&&s(bn),n&&s(Js),n&&s(yn),n&&s(Vs),n&&s(Y),n&&s(Ys),n&&s(H),n&&s(qs),n&&s(q),n&&s(Zs),n&&s(gn),n&&s(Ws),n&&s(Z),n&&s(Ks),n&&s(_n),n&&s(Qs),n&&s(W),n&&s($s),n&&s(A),n&&s(na),n&&s(wn),n&&s(sa),n&&s(K),n&&s(aa),n&&s(Cn),n&&s(pa),n&&s(hn),n&&s(ta),n&&s(Q),n&&s(oa),n&&s(vn),n&&s(ea),n&&s(xn),n&&s(ca),n&&s($),n&&s(la),n&&s(En)}}}class Ho extends Po{constructor(d){super(),So(this,d,null,No,To,{})}}export{Ho as component};
